#!/bin/bash

#
#  print_graphs
#
#  Copyright 2012 Miguel Sánchez de León Peque <msdeleonpeque@gmail.com>
#
#  This program is free software; you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation; either version 3 of the License, or
#  (at your option) any later version.
#
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with this program; if not, write to the Free Software
#  Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
#  MA 02110-1301, USA.
#


function print_help {
	echo -e "\nUsage:\n"
	echo -e "  print_graph T=TITLE X=X_DATA XL=X_LABEL Y=Y_DATA1,Y_DATA2 YL=Y_LABEL D=DRAW1,DRAW2,... C=FACTOR1,FACTOR2... F=FACTOR1,FACTOR2...\n"
	echo -e "Being:\n"
	echo -e "  T    = Title."
	echo -e "  X    = Data for the 'x' axis."
	echo -e "  XL   = Label for the 'x' axis."
	echo -e "  Y    = Data list for the 'y' axis."
	echo -e "  YL   = Label for the 'y' axis."
	echo -e "  D    = List of functions/data to be drawn: { POINTS, BEZIER, CSPLINE, YERR00.00 }."
	echo -e "  C    = List of factors to be compared in the same graph."
	echo -e "  F    = List of factors to be compared in different graphs."
	echo -e ""
}

# Set program parameters
for i in $@; do
	var=$(echo $i | cut -d= -f1)
	val=$(echo $i | cut -d= -f2 | tr "," "\n")
	case $var in
		T)  T=$val;;
		X)  X=$val;;
		XL) XL=$val;;
		Y)  Y=$val;;
		YL) YL=$val;;
		D)  D=$val;;
		C)  C=$val;;
		F)  F=$val;;
	esac
done

# Check for suficient parameters (only some of them are mandatory)
if [[ "$X" == "" || "$Y" == "" || "$D" == "" || "$C" == "$F" ]]; then
	print_help
	exit
fi

# Get synthesis report data
statistics=$(./gen_statistics)

# Set data to be filtered for each graph
i=0
for f in $F; do
	compare_values[$i]=$(echo "$statistics" | ./table_values $f)
	compare_length[$i]=$(echo "${compare_values[$i]}" | wc -w)
	((i++))
done
nfilters=1
for i in ${compare_length[@]}; do
	((nfilters*=($i-1)))
done
divided_nfilters=1
for ((i=0; i<${#compare_values[@]}; i++)); do
	compare=${compare_values[$i]}
	column=$(echo $compare | tr " " ":" | cut -d: -f1)
	kn=$((($nfilters/((${compare_length[$i]}-1)*$divided_nfilters))))
	for ((j=0; j<((${compare_length[$i]}-1)*$divided_nfilters); j++)); do
		j_reduced=$j
		while [ $j_reduced -ge $((${compare_length[$i]}-1)) ]; do
			((j_reduced-=${compare_length[$i]}-1))
		done
		filter_by=$(echo $compare | tr " " ":" | cut -d: -f$((($j_reduced+2))))
		for ((k=0; k<$kn; k++)); do
			filter_number=$((($j*$kn+$k)))
			filter[$filter_number]="${filter[$filter_number]} ${column}=$filter_by"
		done
	done
	divided_nfilters=$((($divided_nfilters*(${compare_length[$i]}-1))))
done

for ((i=0; i<${#filter[@]}; i++)); do
	echo "${filter[$i]}"
done
