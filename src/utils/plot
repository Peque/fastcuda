#!/bin/bash

#
#  plot
#
#  Copyright 2012 Miguel Sánchez de León Peque <msdeleonpeque@gmail.com>
#
#  This program is free software; you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation; either version 3 of the License, or
#  (at your option) any later version.
#
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with this program; if not, write to the Free Software
#  Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
#  MA 02110-1301, USA.
#


function print_help {
	echo -e "\nUsage:\n"
	echo -e "  plot [data_file]\n"
	echo -e "Being:\n"
	echo -e "  [data_file]  = Optional data file. If not present it will read from stdin."
	echo -e ""
}

function plot {
	# TODO: generate this vectors automatically processing the data table
	BROADCAST_ENABLED_OPTIONS=('0' '1')
	TARGET_DEVICE_OPTIONS=('xc6slx45-2-csg324' 'xc6slx45-3-csg324')
	DESIGN_GOAL_OPTIONS=('Area')
	DESIGN_STRATEGY_OPTIONS=('1')
	GLOBAL_OPTIMIZATION_OPTIONS=('AllClockNets')

	for a in ${BROADCAST_ENABLED_OPTIONS[@]}; do
		for b in ${TARGET_DEVICE_OPTIONS[@]}; do
			for c in ${DESIGN_GOAL_OPTIONS[@]}; do
				for d in ${DESIGN_STRATEGY_OPTIONS[@]}; do
					for e in ${GLOBAL_OPTIMIZATION_OPTIONS[@]}; do
						filtered_data=$(cat $1 | ./table_filter \
							BROADCAST_ENABLED=$a \
							TARGET_DEVICE=$b \
							DESIGN_GOAL=$c \
							DESIGN_STRATEGY=$d \
							GLOBAL_OPTIMIZATION=$e \
							| sed 's/:/\t/g' \
							| sort -k +1n)             # Sort by number of kernels
						cmd="set title 'Data for $a:$b:$c:$d:$e'; set key outside right center"
						xlports="set xlabel 'Ports'"
						ylns="set ylabel 'Delay (ns)'"

						if [ "$filtered_data" != "" ]; then
							echo "$filtered_data" > filtered_data
							gnuplot -p -e "$cmd;$xlports;$ylns; plot 'filtered_data' using 1:9 smooth csplines title 'MIATBC (cspline)' with lines"
							gnuplot -p -e "$cmd;$xlports;$ylns; plot 'filtered_data' using 1:9 smooth bezier title 'MIATBC (beizer)' with lines"
							gnuplot -p -e "$cmd;$xlports;$ylns; plot 'filtered_data' using 1:9:(1.0) smooth acsplines title 'MIATBC (acspline)' with lines"
							gnuplot -p -e "$cmd;$xlports;$ylns; plot 'filtered_data' using 1:9:(1.0) title 'MIATBC (yerr)' with yerrorbars"
							#echo "$filtered_data" | gnuplot -p -e "$cmd;$xlports;$ylns; plot '-' using 1:10 title 'MORTAC' with lines"
							rm filtered_data
						fi
					done
				done
			done
		done
	done

}


if [ $# -lt 1 ]; then
	while read pipe_line; do
		echo "$pipe_line" >> gnuplot_data
	done
else
	cat $1 >> gnuplot_data
fi

plot gnuplot_data
rm gnuplot_data
